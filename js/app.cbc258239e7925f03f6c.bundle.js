(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(e,t,s)=>{const a=s(475),o=s(27),{lightningChart:n,SolidFill:r,SolidLine:l,UILayoutBuilders:i,UIElementBuilders:d,AutoCursorModes:c,AxisTickStrategies:x,emptyLine:u,emptyFill:S,AxisScrollStrategies:m,Themes:p}=a,{createProgressiveTraceGenerator:g}=o,y=["Dev","Maintenance","Support","Sales","Marketing"],T=864e5,h=Promise.all(y.map(((e,t)=>g().setNumberOfPoints(365).generate().toPromise().then((e=>e.map((e=>({x:e.x*T,y:t>0?100*Math.abs(e.y)+100:50*Math.abs(e.y)+1800})))))))),w=n().Dashboard({numberOfRows:3,numberOfColumns:2}),k=w.getTheme(),f=new l({thickness:20/window.devicePixelRatio,fillStyle:new r({color:k.examples.unfocusedDataColor})}),D=new r({color:k.examples.mainDataColor}),E=h.then((e=>e.map((e=>e.reduce(((e,t)=>e+t.y),0))))),I=w.createChartXY({columnIndex:0,rowIndex:0,columnSpan:1,rowSpan:2}).setAutoCursorMode(c.disabled).setTitle("Total expenses for 2018 per department").setMouseInteractions(!1),F=I.getDefaultAxisX();F.setTickStrategy(x.Empty).setMouseInteractions(!1).setInterval({start:0,end:100}).setScrollStrategy(void 0),I.getDefaultAxisY().setTitle("Expenses ($)").setStrokeStyle((e=>e.setThickness(0))).setNibStyle(u).setMouseInteractions(!1);const C=I.addSegmentSeries().setHighlightOnHover(!1),P=y.length+1,R=y.map(((e,t)=>F.addCustomTick().setTextFormatter((t=>e)).setValue(100/P*(t+1)).setGridStrokeStyle(u))),b=new Date(2018,0,1),A=w.createChartXY({columnIndex:0,rowIndex:2,columnSpan:2,rowSpan:1}).setPadding({right:40});w.setRowHeight(2,2);const M=A.addLineSeries().setName("Total Expenses").setStrokeStyle((e=>e.setFillStyle(D)));A.getDefaultAxisX().setTickStrategy(x.DateTime,(e=>e.setDateOrigin(b))),h.then((e=>{const t=e.reduce(((e,t)=>t.reduce(((e,t)=>e>t.y?e:t.y),e)),0);A.getDefaultAxisY().setTitle("Expenses ($)").setScrollStrategy(m.fitting).setInterval({start:0,end:t,stopAxisAfter:!1})})),M.setCursorResultTableFormatter(((e,t,s,a)=>e.addRow("Total expenses").addRow("Date: "+t.axisX.formatValue(s)).addRow("Expenses: $"+a.toFixed(2)))),Promise.all([E,h]).then((([e,t])=>{const s=R.map(((t,s)=>{const a=t.getValue();return C.add({startX:a,startY:0,endX:a,endY:e[s]})})),a=e=>{A.setTitle(`${y[e]} expenses per day`),M.clear(),M.add(t[e]),s.forEach((e=>e.setStrokeStyle(f))),R.forEach((e=>e.setMarker((e=>e.setTextFont((e=>e.setWeight("normal"))))))),s[e].setStrokeStyle((e=>e.setFillStyle(D))),R[e].setMarker((e=>e.setTextFont((e=>e.setWeight("bold")))))};s.forEach(((e,t)=>{e.onMouseEnter((()=>a(t))),e.onTouchStart((()=>a(t)))})),a(0)}));const X=w.createUIPanel({columnIndex:1,rowIndex:0,columnSpan:1,rowSpan:1}).addUIElement(i.Column).setPosition({x:50,y:50}).setPadding({right:40}).setBackground((e=>e.setFillStyle(S).setStrokeStyle(u)));E.then((e=>{const t=X.addElement(i.Row);t.addGap(),t.addElement(d.TextBox.addStyler((t=>t.setTextFont((e=>e.setSize(75/window.devicePixelRatio))).setText("$"+e.reduce(((e,t)=>e+t),0).toFixed())))),t.addGap(),X.addElement(d.TextBox.addStyler((e=>e.setTextFont((e=>e.setSize(25/window.devicePixelRatio))).setText("Total company expenses"))))}));const v=w.createChartXY({columnIndex:1,rowIndex:1,columnSpan:1,rowSpan:1}).setTitle("Total expenses per day").setPadding({right:40});v.getDefaultAxisX().setTickStrategy(x.DateTime,(e=>e.setDateOrigin(b)));const O=v.addSplineSeries().setName("Total Expenses ($)").setStrokeStyle((e=>e.setThickness(2)));h.then((e=>{const t=new Array(365);for(let s=0;s<365;s++)t[s]={x:s*T,y:y.reduce(((t,a,o)=>t+e[o][s].y),0)};O.setPointFillStyle(S).add(t)})),O.setCursorResultTableFormatter(((e,t,s,a)=>e.addRow("Total expenses").addRow("Date: "+t.axisX.formatValue(s)).addRow("Expenses: $"+a.toFixed(2)))),v.getDefaultAxisY().setTitle("Expenses ($)")}},e=>{e.O(0,[736],(()=>(138,e(e.s=138)))),e.O()}]);